import {useRouter} from "next/router";
import Head from "next/head";
import {useEffect, useState} from "react";
import styled from "styled-components";
import Image from "next/image";

const ProductDetail = () => {
  const [task, setTask] = useState(null);
  const router = useRouter();
  const {details} = router.query;

  useEffect(() => {
    const getTask = async () => {
      try {
        const response = await fetch(`/api/tasks/${details}`);
        if (response.ok) {
          const data = await response.json();
          setTask(data);
        } else {
          throw new Error(`Fetch failed with status code ${response.status}`);
        }
      } catch (error) {
        alert(error);
      }
    };
    if (details) {
      getTask();
    }
  }, [details]);

  return (
    <StyledLayout>
      <Head>
        <title>Task Details</title>
        <meta name="description" content="Generated by create next app" />
      </Head>
      {task ? (
        <>
          <Image
            src={task.image}
            alt={"image of the detailed task"}
            width={175}
            height={122}
          ></Image>
          <p>{task.whichOne}</p>
          <p>
            Please do the following task:
            <br></br>
            <p className="taskUnderline">{task.title}</p>
          </p>
          <p>{`"${task.details}"`}</p>
          <p>
            Gold:
            <p className="goldIndicator"> {task.gold}</p>
          </p>
          <p>
            Experience:
            <p className="experienceIndicator"> {task.experience}</p>
          </p>
        </>
      ) : (
        <p>Loading...</p>
      )}
    </StyledLayout>
  );
};

export default ProductDetail;

const StyledLayout = styled.div`
  text-align: center;
  margin-bottom: 20%;
  margin-top: 10%;
  font-size: 26px;
  font-weight: 600;
  border: 10px solid salmon;
  border-style: inset;
  padding: 20px;
  background: rgb(103, 17, 17);
  background: linear-gradient(
    120deg,
    rgba(103, 17, 17, 0.3) 0%,
    rgba(253, 29, 29, 0.3) 20%,
    rgba(255, 170, 50, 0.3) 100%
  );
  .taskUnderline {
    text-decoration: underline;
  }
  .goldIndicator {
    color: #e8871e;
    display: inline;
  }
  .experienceIndicator {
    color: #26c485;
    display: inline;
  }
`;
